plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "com.bmuschko.docker-spring-boot-application" version "9.1.0"
}

jar {
    enabled = false
}

def hash = 'git rev-parse --short HEAD'.execute().text.trim()
group = 'az.example'
version = "0.0.1$hash"
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

task createDockerfile(type: Dockerfile, dependsOn: build) {
    destFile.set(project.file('build/Dockerfile'))
    from 'openjdk:11'
    workingDir '/app/'
    copyFile "libs/${bootJar.archiveFileName.get()}", '/app/'
    entryPoint 'java'
    exposePort 8080
    defaultCommand '-jar', "/app/${bootJar.archiveFileName.get()}"
}

task buildImage(type: DockerBuildImage, dependsOn: createDockerfile) {
    inputDir.set(buildDir)
    images.add("${project.name}:${project.version}")
}

task pushImage(type: DockerPushImage, dependsOn: buildImage) {
    images.add("sahilappayev/${project.name}:${project.version}")
}
